server {
   listen 80; # Nginx escucha en el puerto 80 dentro del contenedor
   server_name localhost; # Puedes poner tu dominio si lo tienes, sino localhost está bien

   # Configuración para servir los archivos estáticos de tu frontend
   location / {
       root /usr/share/nginx/html; # Directorio donde Nginx buscará los archivos estáticos
       index index.html index.htm; # Archivo de inicio
       try_files $uri $uri/ /index.html; # Muy importante para Single Page Applications (SPAs)
                                        # Esto asegura que todas las rutas internas sean manejadas por index.html
   }

   # Redirección para las peticiones a /public al backend
   location /public/ {
       # 'backend' es el nombre del servicio de tu backend en docker-compose
       # '8080' es el puerto en el que tu backend escucha dentro de su contenedor
       proxy_pass http://backend:8080/public/;
       # Headers para reenviar información importante de la petición original
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;
   }

   # Redirección para las peticiones a /admin al backend
   location /admin/ {
       # Asegúrate de que esta ruta coincida exactamente con la que espera tu backend
       proxy_pass http://backend:8080/admin/;
       # Headers para reenviar información importante de la petición original
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;
   }

  location /user/ {
      # Asegúrate de que esta ruta coincida exactamente con la que espera tu backend
      proxy_pass http://backend:8080/user/;
      # Headers para reenviar información importante de la petición original
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
  }
}
